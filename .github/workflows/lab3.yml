name: Lab4 Add Testing To Pipeline

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main

jobs:
  ci-unit-test:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - run: npm clean-install

      - name: Run Unit-Tests
        run: npm run lint

      - name: Run Unit-Tests
        run: npm run unit-tests

      - name: Uload the UT coverage
        uses: actions/upload-artifact@v3
        with:
          name: ut-${{ github.sha }}
          path: ./coverage

      - name: Validate Coverage
        uses: codecov/codecov-action@v2
        with:
          directory: ./coverage
          files: coverage-final.json
          fail_ci_if_error: true
          flags: unittests
          verbose: true
          dry_run: true

  ci-intergration-test:
    if: false
    runs-on: ubuntu-latest
    services:
        mongodb:
          image: mongo:4.0
          options: >-
            --health-cmd mongo
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 27017:27017
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: npm clean-install

      - name: Running Intergration Tests
        run: npm run integration-tests
        env:
          MONGO_URL: mongodb://localhost:27017/todos
          APP_PORT: 2000

      - name: Uload the UT coverage
        uses: actions/upload-artifact@v3
        with:
          name: it-${{ github.sha }}
          path: ./coverage

  ci-sast:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install NodeJsScan
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          pip3 install nodejsscan
      - name: Execute Node Scan
        run: |
          nodejsscan -d . -o sast-output.json
      
      - run: cat sast-output.json

      - run: exit $(cat sast-output.json | jq .total_count.sec)

      - name: Uload the SAST  coverage
        uses: actions/upload-artifact@v3
        with:
          name: sast-${{ github.sha }}
          path: cat sast-output.json


  ci-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: npm clean-install
      
      - if: github.ref == 'refs/heads/main'
        run: npm pack

      - if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: node-todo-${{ github.sha }}
          path: ./*.tgz
